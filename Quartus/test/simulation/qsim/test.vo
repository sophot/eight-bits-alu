// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 SJ Web Edition"

// DATE "12/14/2019 17:31:04"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module test1 (
	S,
	s2,
	s1,
	A,
	B,
	s0,
	Cn,
	Cout);
output 	S;
input 	s2;
input 	s1;
input 	A;
input 	B;
input 	s0;
input 	Cn;
output 	Cout;

// Design Ports Information
// S	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cout	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s2	=>  Location: PIN_10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s1	=>  Location: PIN_34,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s0	=>  Location: PIN_11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cn	=>  Location: PIN_23,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \S~output_o ;
wire \Cout~output_o ;
wire \B~input_o ;
wire \s1~input_o ;
wire \A~input_o ;
wire \s0~input_o ;
wire \inst12~1_combout ;
wire \inst12~0_combout ;
wire \s2~input_o ;
wire \inst12~2_combout ;
wire \Cn~input_o ;
wire \inst13~combout ;
wire \inst9~combout ;
wire \inst14~combout ;
wire \inst|inst5~combout ;
wire \inst|inst6~0_combout ;


// Location: IOOBUF_X0_Y6_N23
cycloneive_io_obuf \S~output (
	.i(\inst|inst5~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S~output_o ),
	.obar());
// synopsys translate_off
defparam \S~output .bus_hold = "false";
defparam \S~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y9_N9
cycloneive_io_obuf \Cout~output (
	.i(\inst|inst6~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Cout~output_o ),
	.obar());
// synopsys translate_off
defparam \Cout~output .bus_hold = "false";
defparam \Cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N1
cycloneive_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y5_N15
cycloneive_io_ibuf \s1~input (
	.i(s1),
	.ibar(gnd),
	.o(\s1~input_o ));
// synopsys translate_off
defparam \s1~input .bus_hold = "false";
defparam \s1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y23_N1
cycloneive_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y18_N22
cycloneive_io_ibuf \s0~input (
	.i(s0),
	.ibar(gnd),
	.o(\s0~input_o ));
// synopsys translate_off
defparam \s0~input .bus_hold = "false";
defparam \s0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N26
cycloneive_lcell_comb \inst12~1 (
// Equation(s):
// \inst12~1_combout  = (\B~input_o  & ((\s0~input_o ) # (\s1~input_o  $ (!\A~input_o )))) # (!\B~input_o  & ((\s1~input_o  & ((\s0~input_o ))) # (!\s1~input_o  & (\A~input_o ))))

	.dataa(\B~input_o ),
	.datab(\s1~input_o ),
	.datac(\A~input_o ),
	.datad(\s0~input_o ),
	.cin(gnd),
	.combout(\inst12~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst12~1 .lut_mask = 16'hFE92;
defparam \inst12~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N0
cycloneive_lcell_comb \inst12~0 (
// Equation(s):
// \inst12~0_combout  = (\s1~input_o  & (\A~input_o )) # (!\s1~input_o  & (!\A~input_o  & \s0~input_o ))

	.dataa(gnd),
	.datab(\s1~input_o ),
	.datac(\A~input_o ),
	.datad(\s0~input_o ),
	.cin(gnd),
	.combout(\inst12~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst12~0 .lut_mask = 16'hC3C0;
defparam \inst12~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y18_N15
cycloneive_io_ibuf \s2~input (
	.i(s2),
	.ibar(gnd),
	.o(\s2~input_o ));
// synopsys translate_off
defparam \s2~input .bus_hold = "false";
defparam \s2~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N12
cycloneive_lcell_comb \inst12~2 (
// Equation(s):
// \inst12~2_combout  = (\s2~input_o  & (\inst12~1_combout )) # (!\s2~input_o  & ((\inst12~0_combout )))

	.dataa(\inst12~1_combout ),
	.datab(\inst12~0_combout ),
	.datac(\s2~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst12~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst12~2 .lut_mask = 16'hACAC;
defparam \inst12~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \Cn~input (
	.i(Cn),
	.ibar(gnd),
	.o(\Cn~input_o ));
// synopsys translate_off
defparam \Cn~input .bus_hold = "false";
defparam \Cn~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N24
cycloneive_lcell_comb inst13(
// Equation(s):
// \inst13~combout  = (\Cn~input_o  & (!\s2~input_o  & \s1~input_o ))

	.dataa(\Cn~input_o ),
	.datab(gnd),
	.datac(\s2~input_o ),
	.datad(\s1~input_o ),
	.cin(gnd),
	.combout(\inst13~combout ),
	.cout());
// synopsys translate_off
defparam inst13.lut_mask = 16'h0A00;
defparam inst13.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N22
cycloneive_lcell_comb inst9(
// Equation(s):
// \inst9~combout  = (!\s2~input_o  & ((\B~input_o  & ((\s0~input_o ))) # (!\B~input_o  & (\s1~input_o  & !\s0~input_o ))))

	.dataa(\B~input_o ),
	.datab(\s1~input_o ),
	.datac(\s2~input_o ),
	.datad(\s0~input_o ),
	.cin(gnd),
	.combout(\inst9~combout ),
	.cout());
// synopsys translate_off
defparam inst9.lut_mask = 16'h0A04;
defparam inst9.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N10
cycloneive_lcell_comb inst14(
// Equation(s):
// \inst14~combout  = (\Cn~input_o  & (!\s2~input_o  & \s0~input_o ))

	.dataa(\Cn~input_o ),
	.datab(gnd),
	.datac(\s2~input_o ),
	.datad(\s0~input_o ),
	.cin(gnd),
	.combout(\inst14~combout ),
	.cout());
// synopsys translate_off
defparam inst14.lut_mask = 16'h0A00;
defparam inst14.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N4
cycloneive_lcell_comb \inst|inst5 (
// Equation(s):
// \inst|inst5~combout  = \inst12~2_combout  $ (\inst9~combout  $ (((\inst13~combout ) # (\inst14~combout ))))

	.dataa(\inst12~2_combout ),
	.datab(\inst13~combout ),
	.datac(\inst9~combout ),
	.datad(\inst14~combout ),
	.cin(gnd),
	.combout(\inst|inst5~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst5 .lut_mask = 16'hA596;
defparam \inst|inst5 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y10_N30
cycloneive_lcell_comb \inst|inst6~0 (
// Equation(s):
// \inst|inst6~0_combout  = (\inst12~2_combout  & ((\inst13~combout ) # ((\inst9~combout ) # (\inst14~combout )))) # (!\inst12~2_combout  & (\inst9~combout  & ((\inst13~combout ) # (\inst14~combout ))))

	.dataa(\inst12~2_combout ),
	.datab(\inst13~combout ),
	.datac(\inst9~combout ),
	.datad(\inst14~combout ),
	.cin(gnd),
	.combout(\inst|inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst6~0 .lut_mask = 16'hFAE8;
defparam \inst|inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign S = \S~output_o ;

assign Cout = \Cout~output_o ;

endmodule
